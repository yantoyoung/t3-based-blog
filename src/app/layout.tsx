import "~/styles/globals.css";

import { GeistSans } from "geist/font/sans";

import { TRPCReactProvider } from "~/trpc/react";
import Link from "next/link";
import { api } from "~/trpc/server";
import { getServerAuthSession } from "~/server/auth";

export const metadata = {
  title: "T3-based blog",
  description: "Generated by create-t3-app",
  icons: [{ rel: "icon", url: "/favicon.ico" }],
};

export default async function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  const hello = await api.post.hello({ text: "from tRPC" });
  const session = await getServerAuthSession();

  return (
    <html lang="en" className={`${GeistSans.variable}`}>
      <body>

        <div className="flex flex-col items-center gap-2">
          <p className="text-2xl text-blue-800">
            {hello ? hello.greeting : "Loading tRPC query..."}
          </p>

          <div className="flex flex-col items-center justify-center gap-4">
            <p className="text-center text-2xl text-blue-500">
              {session && <span>Logged in as {session.user?.name}</span>}
            </p>
            <Link
                href={session ? "/api/auth/signout" : "/api/auth/signin"}
                className="rounded-full bg-blue-500 px-10 py-3 font-semibold no-underline transition hover:bg-blue-300"
            >
              {session ? "Sign out" : "Sign in"}
            </Link>
          </div>
        </div>

        <TRPCReactProvider>{children}</TRPCReactProvider>
      </body>
    </html>
  );
}
